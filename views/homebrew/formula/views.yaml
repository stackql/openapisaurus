vw_info:
  name: vw_info
  id: homebrew.formula.vw_info
  config:
    views:
      select:
        predicate: sqlDialect == "sqlite3"
        ddl: |-
          SELECT
          name as formula_name,
          full_name,
          generated_date,
          --desc as description,
          homepage,
          JSON_EXTRACT(versions, '$.stable') as latest_version,
          license,
          deprecated,
          disabled
          FROM
          homebrew.formula.formula
          WHERE formula_name = 'stackql'
        fallback:
          predicate: sqlDialect == "postgres"
          ddl: |-
            SELECT
            name as formula_name,
            full_name,
            generated_date,
            --desc as description,
            homepage,
            json_extract_path_text(versions, 'stable') as latest_version,
            license,
            deprecated,
            disabled
            FROM
            homebrew.formula.formula
            WHERE formula_name = 'stackql'          
vw_build_errors:
  name: vw_build_errors
  id: homebrew.formula.vw_build_errors
  config:
    views:
      select:
        predicate: sqlDialect == "sqlite3"
        ddl: |-
          SELECT
          name as formula_name,
          JSON_EXTRACT(JSON_EXTRACT(analytics, '$.build_error.30d'), '$.' || formula_name) as build_errors_30d
          FROM
          homebrew.formula.formula
          WHERE formula_name = 'stackql'
        fallback:
          predicate: sqlDialect == "postgres"
          ddl: |-
            SELECT
            name as formula_name,
            json_extract_path_text(json_extract_path_text(analytics, 'build_error', '30d'), formula_name) as build_errors_30d
            FROM
            homebrew.formula.formula
            WHERE formula_name = 'stackql'          
vw_usage_metrics:
  name: vw_usage_metrics
  id: homebrew.formula.vw_usage_metrics
  config:
    views:
      select:
        predicate: sqlDialect == "sqlite3"
        ddl: |-
          SELECT
          name as formula_name,
          JSON_EXTRACT(JSON_EXTRACT(analytics, '$.install.30d'), '$.' || formula_name) as installs_30d,
          JSON_EXTRACT(JSON_EXTRACT(analytics, '$.install.90d'), '$.' || formula_name) as installs_90d,
          JSON_EXTRACT(JSON_EXTRACT(analytics, '$.install.365d'), '$.' || formula_name) as installs_365d,
          JSON_EXTRACT(JSON_EXTRACT(analytics, '$.install_on_request.30d'), '$.' || formula_name) as install_on_requests_30d,
          JSON_EXTRACT(JSON_EXTRACT(analytics, '$.install_on_request.90d'), '$.' || formula_name) as install_on_requests_90d,
          JSON_EXTRACT(JSON_EXTRACT(analytics, '$.install_on_request.365d'), '$.' || formula_name) as install_on_requests_365d	
          FROM
          homebrew.formula.formula
          WHERE formula_name IN ('stackql')
        fallback:
          predicate: sqlDialect == "postgres"
          ddl: |-
            SELECT
            name as formula_name,
            json_extract_path_text(json_extract_path_text(analytics, 'install', '30d'), formula_name) as installs_30d,
            json_extract_path_text(json_extract_path_text(analytics, 'install', '90d'), formula_name) as installs_90d,
            json_extract_path_text(json_extract_path_text(analytics, 'install', '365d'), formula_name) as installs_365d,
            json_extract_path_text(json_extract_path_text(analytics, 'install_on_request', '30d'), formula_name) as install_on_requests_30d,
            json_extract_path_text(json_extract_path_text(analytics, 'install_on_request', '90d'), formula_name) as install_on_requests_90d,
            json_extract_path_text(json_extract_path_text(analytics, 'install_on_request', '365d'), formula_name) as install_on_requests_365d
            FROM
            homebrew.formula.formula
            WHERE formula_name IN ('stackql')
vw_dependencies:
  name: vw_dependencies
  id: homebrew.formula.vw_dependencies
  config:
    views:
      select:
        predicate: sqlDialect == "sqlite3"
        ddl: |-
          SELECT
          name as formula_name,
          JSON_EXTRACT(dependencies, '$') as dependencies,
          JSON_EXTRACT(head_dependencies, '$') as head_dependencies,
          JSON_EXTRACT(build_dependencies, '$') as build_dependencies,
          JSON_EXTRACT(test_dependencies, '$') as test_dependencies,
          JSON_EXTRACT(optional_dependencies, '$') as optional_dependencies,
          JSON_EXTRACT(recommended_dependencies, '$') as recommended_dependencies
          FROM
          homebrew.formula.formula
          WHERE formula_name = 'stackql'
        fallback:
          predicate: sqlDialect == "postgres"
          ddl: |-
            SELECT
            name as formula_name,
            dependencies::json::text as dependencies,
            head_dependencies::json::text as head_dependencies,
            build_dependencies::json::text as build_dependencies,
            test_dependencies::json::text as test_dependencies,
            optional_dependencies::json::text as optional_dependencies,
            recommended_dependencies::json::text as recommended_dependencies
            FROM
            homebrew.formula.formula
            WHERE formula_name = 'stackql'          
vw_conflicts:
  name: vw_conflicts
  id: homebrew.formula.vw_conflicts
  config:
    views:
      select:
        predicate: sqlDialect == "sqlite3"
        ddl: |-
          SELECT
          name as formula_name,
          JSON_EXTRACT(conflicts_with, '$') as conflicts_with,
          JSON_EXTRACT(conflicts_with_reasons, '$') as conflicts_with_reasons
          FROM
          homebrew.formula.formula
          WHERE formula_name = 'stackql'
        fallback:
          predicate: sqlDialect == "postgres"
          ddl: |-
            SELECT
            name as formula_name,
            conflicts_with::json::text as conflicts_with,
            conflicts_with_reasons::json::text as conflicts_with_reasons
            FROM
            homebrew.formula.formula
            WHERE formula_name = 'stackql'          
vw_lifecycle:
  name: vw_lifecycle
  id: homebrew.formula.vw_lifecycle
  config:
    views:
      select:
        ddl: |-
          SELECT
          name as formula_name,
          deprecated,
          deprecation_date,
          deprecation_reason,
          disabled,
          disable_date,
          disable_reason
          FROM
          homebrew.formula.formula
          WHERE formula_name = 'stackql'
vw_urls:
  name: vw_urls
  id: homebrew.formula.vw_urls
  config:
    views:
      select:
        predicate: sqlDialect == "sqlite3"
        ddl: |-
          SELECT
          name as formula_name,
          homepage,
          JSON_EXTRACT(urls, '$.stable.url') as stable_url,
          JSON_EXTRACT(urls, '$.stable.tag') as stable_tag,
          JSON_EXTRACT(urls, '$.stable.revision') as stable_revision,
          JSON_EXTRACT(urls, '$.stable.using') as stable_using,
          JSON_EXTRACT(urls, '$.stable.checksum') as stable_checksum,
          JSON_EXTRACT(urls, '$.head.url') as head_url,
          JSON_EXTRACT(urls, '$.head.branch') as head_branch,
          JSON_EXTRACT(urls, '$.head.using') as head_using
          FROM
          homebrew.formula.formula
          WHERE formula_name = 'stackql'
        fallback:
          predicate: sqlDialect == "postgres"
          ddl: |-
            SELECT
            name as formula_name,
            homepage,
            json_extract_path_text(urls, 'stable', 'url') as stable_url,
            json_extract_path_text(urls, 'stable', 'tag') as stable_tag,
            json_extract_path_text(urls, 'stable', 'revision') as stable_revision,
            json_extract_path_text(urls, 'stable', 'using') as stable_using,
            json_extract_path_text(urls, 'stable', 'checksum') as stable_checksum,
            json_extract_path_text(urls, 'head', 'url') as head_url,
            json_extract_path_text(urls, 'head', 'branch') as head_branch,
            json_extract_path_text(urls, 'head', 'using') as head_using
            FROM
            homebrew.formula.formula
            WHERE formula_name = 'stackql'
vw_versions:
  name: vw_versions
  id: homebrew.formula.vw_versions
  config:
    views:
      select:
        predicate: sqlDialect == "sqlite3"
        ddl: |-
          SELECT
          name as formula_name,
          JSON_EXTRACT(versions, '$.stable') as stable_version,
          JSON_EXTRACT(versions, '$.head') as head_version,
          CASE 
          WHEN JSON_EXTRACT(versions, '$.bottle') = 1 THEN 'true'
          ELSE 'false' 
          END as bottle_available
          FROM
          homebrew.formula.formula
          WHERE formula_name = 'stackql'
        fallback:
          predicate: sqlDialect == "postgres"
          ddl: |-
            SELECT
            name as formula_name,
            json_extract_path_text(versions, 'stable') as stable_version,
            json_extract_path_text(versions, 'head') as head_version,
            CASE 
            WHEN json_extract_path_text(versions, 'bottle')::boolean THEN 'true'
            ELSE 'false' 
            END as bottle_available
            FROM
            homebrew.formula.formula
            WHERE formula_name = 'stackql'          