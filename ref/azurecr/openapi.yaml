openapi: 3.0.1
info:
  title: Azure Container Registry
  description: Metadata API definition for the Azure Container Registry runtime
  version: 2021-07-01
servers:
- url: /
security:
- registry_auth: []
  registry_oauth2: []
tags:
- name: ContainerRegistry
  description: Registry Operations
- name: ContainerRegistryBlob
  description: Blob Operations
paths:
  /v2/:
    get:
      tags:
      - Registry
      description: Tells whether this Docker Registry instance supports Docker Registry
        HTTP API v2
      operationId: ContainerRegistry_CheckDockerV2Support
      responses:
        "200":
          description: Successful response. API v2 supported
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Check Docker Registry V2 Support:
          $ref: ./examples/GetDockerRegistryV2Support.json
  /v2/{name}/manifests/{reference}:
    get:
      tags:
      - Repository
      description: Get the manifest identified by `name` and `reference` where `reference`
        can be a tag or digest.
      operationId: ContainerRegistry_GetManifest
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: reference
        in: path
        description: "A tag or a digest, pointing to a specific image"
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: accept
        in: header
        description: "Accept header string delimited by comma. For example, application/vnd.docker.distribution.manifest.v2+json"
        schema:
          type: string
      responses:
        "200":
          description: Returns the requested manifest file in a larger combined group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestWrapper'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Get manifest:
          $ref: ./examples/GetManifest.json
    put:
      tags:
      - Repository
      description: Put the manifest identified by `name` and `reference` where `reference`
        can be a tag or digest.
      operationId: ContainerRegistry_CreateManifest
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: reference
        in: path
        description: "A tag or a digest, pointing to a specific image"
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        description: "Manifest body, can take v1 or v2 values depending on accept\
          \ header"
        content:
          application/vnd.docker.distribution.manifest.v2+json:
            schema:
              $ref: '#/components/schemas/Manifest'
        required: true
        x-ms-parameter-location: method
      responses:
        "201":
          description: The manifest is updated
          headers:
            Content-Length:
              description: The length of the requested blob content.
              schema:
                type: integer
                format: int64
            Docker-Content-Digest:
              description: Identifies the docker upload uuid for the current request.
              schema:
                type: string
            Location:
              description: The canonical location url of the uploaded manifest.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-long-running-operation: false
      x-ms-examples:
        Put manifest:
          $ref: ./examples/CreateManifest.json
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Repository
      description: Delete the manifest identified by `name` and `reference`. Note
        that a manifest can _only_ be deleted by `digest`.
      operationId: ContainerRegistry_DeleteManifest
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: reference
        in: path
        description: Digest of a BLOB
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "202":
          description: The manifest has been deleted
          content: {}
        "404":
          description: The manifest was not found
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Delete manifest:
          $ref: ./examples/DeleteManifest.json
  /v2/{name}/blobs/{digest}:
    get:
      tags:
      - ContainerRegistryBlob
      description: Retrieve the blob from the registry identified by digest.
      operationId: ContainerRegistryBlob_GetBlob
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: digest
        in: path
        description: Digest of a BLOB
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          description: The blob identified by digest is available. The blob content
            will be present in the body of the response.
          headers:
            Content-Length:
              description: The length of the requested blob content.
              schema:
                type: integer
                format: int64
            Docker-Content-Digest:
              description: Digest of the targeted content for the request.
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                description: blob binary data
                format: binary
        "307":
          description: The blob identified by digest is available at the provided
            location.
          headers:
            Location:
              description: The location where the layer should be accessible.
              schema:
                type: string
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Get a blob from digest:
          $ref: ./examples/GetBlob.json
    delete:
      tags:
      - ContainerRegistryBlob
      description: Removes an already uploaded blob.
      operationId: ContainerRegistryBlob_DeleteBlob
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: digest
        in: path
        description: Digest of a BLOB
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "202":
          description: The blob identified by digest is available. The blob content
            will be present in the body of the response.
          headers:
            Docker-Content-Digest:
              description: Digest of the targeted content for the request.
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                description: blob binary data
                format: binary
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Delete a blob:
          $ref: ./examples/DeleteBlob.json
    head:
      tags:
      - ContainerRegistryBlob
      description: "Same as GET, except only the headers are returned."
      operationId: ContainerRegistryBlob_CheckBlobExists
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: digest
        in: path
        description: Digest of a BLOB
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          description: The blob identified by digest is available. The blob content
            will be present in the body of the response.
          headers:
            Content-Length:
              description: The length of the requested blob content.
              schema:
                type: integer
                format: int64
            Docker-Content-Digest:
              description: Digest of the targeted content for the request.
              schema:
                type: string
          content: {}
        "307":
          description: The blob identified by digest is available at the provided
            location.
          headers:
            Location:
              description: The location where the layer should be accessible.
              schema:
                type: string
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Head for a Blob Chunk:
          $ref: ./examples/CheckBlob.json
  /v2/{name}/blobs/uploads/:
    post:
      tags:
      - ContainerRegistryBlob
      description: Mount a blob identified by the `mount` parameter from another repository.
      operationId: ContainerRegistryBlob_MountBlob
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: from
        in: query
        description: Name of the source repository.
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: mount
        in: query
        description: Digest of blob to mount from the source repository.
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "201":
          description: The blob has been created in the registry and is available
            at the provided location.
          headers:
            Docker-Upload-UUID:
              description: Identifies the docker upload uuid for the current request.
              schema:
                type: string
            Location:
              description: Provided location for blob
              schema:
                type: string
            Docker-Content-Digest:
              description: Digest of the targeted content for the request.
              schema:
                type: string
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Mount a blob from repository:
          $ref: ./examples/MountBlob.json
  /{nextBlobUuidLink}:
    get:
      tags:
      - ContainerRegistryBlob
      description: Retrieve status of upload identified by uuid. The primary purpose
        of this endpoint is to resolve the current status of a resumable upload.
      operationId: ContainerRegistryBlob_GetUploadStatus
      parameters:
      - name: nextBlobUuidLink
        in: path
        description: "Link acquired from upload start or previous chunk. Note, do\
          \ not include initial / (must do substring(1) )"
        required: true
        schema:
          type: string
          x-ms-client-name: location
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-client-name: location
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      responses:
        "204":
          description: The upload is known and in progress. The last received offset
            is available in the Range header.
          headers:
            Docker-Upload-UUID:
              description: Identifies the docker upload uuid for the current request.
              schema:
                type: string
            Range:
              description: Range indicating the current progress of the upload.
              schema:
                type: string
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Get blob status:
          $ref: ./examples/GetBlobStatus.json
    put:
      tags:
      - ContainerRegistryBlob
      description: "Complete the upload, providing all the data in the body, if necessary.\
        \ A request without a body will just complete the upload with previously uploaded\
        \ content."
      operationId: ContainerRegistryBlob_CompleteUpload
      parameters:
      - name: digest
        in: query
        description: Digest of a BLOB
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: nextBlobUuidLink
        in: path
        description: "Link acquired from upload start or previous chunk. Note, do\
          \ not include initial / (must do substring(1) )"
        required: true
        schema:
          type: string
          x-ms-client-name: location
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-client-name: location
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      requestBody:
        description: Optional raw data of blob
        content:
          application/octet-stream:
            schema:
              type: object
              format: file
        required: false
        x-ms-parameter-location: method
      responses:
        "201":
          description: The upload has been completed and accepted by the registry.
          headers:
            Range:
              description: Range indicating the current progress of the upload.
              schema:
                type: string
            Location:
              description: Provided location for blob
              schema:
                type: string
            Docker-Content-Digest:
              description: Digest of the targeted content for the request.
              schema:
                type: string
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        End a blob upload:
          $ref: ./examples/EndBlobUpload.json
      x-codegen-request-body-name: value
    delete:
      tags:
      - ContainerRegistryBlob
      description: "Cancel outstanding upload processes, releasing associated resources.\
        \ If this is not called, the unfinished uploads will eventually timeout."
      operationId: ContainerRegistryBlob_CancelUpload
      parameters:
      - name: nextBlobUuidLink
        in: path
        description: "Link acquired from upload start or previous chunk. Note, do\
          \ not include initial / (must do substring(1) )"
        required: true
        schema:
          type: string
          x-ms-client-name: location
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-client-name: location
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      responses:
        "204":
          description: The upload has been successfully deleted.
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        End a blob upload:
          $ref: ./examples/CancelBlobUpload.json
    patch:
      tags:
      - ContainerRegistryBlob
      description: Upload a stream of data without completing the upload.
      operationId: ContainerRegistryBlob_UploadChunk
      parameters:
      - name: nextBlobUuidLink
        in: path
        description: "Link acquired from upload start or previous chunk. Note, do\
          \ not include initial / (must do substring(1) )"
        required: true
        schema:
          type: string
          x-ms-client-name: location
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-client-name: location
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      requestBody:
        description: Raw data of blob
        content:
          application/octet-stream:
            schema:
              type: object
              format: file
        required: true
        x-ms-parameter-location: method
      responses:
        "202":
          description: The stream of data has been accepted and the current progress
            is available in the range header. The updated upload location is available
            in the Location header.
          headers:
            Docker-Upload-UUID:
              description: Identifies the docker upload uuid for the current request.
              schema:
                type: string
            Range:
              description: Range indicating the current progress of the upload.
              schema:
                type: string
            Location:
              description: Provided location for blob
              schema:
                type: string
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      security:
      - registry_auth: []
        registry_oauth2: []
      x-ms-examples:
        Upload Blob:
          $ref: ./examples/UploadBlob.json
      x-codegen-request-body-name: value
  /acr/v1/_catalog:
    get:
      tags:
      - Registry
      description: List repositories
      operationId: ContainerRegistry_GetRepositories
      parameters:
      - name: last
        in: query
        description: Query parameter for the last item in previous query. Result set
          will include values lexically after last.
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: "n"
        in: query
        description: query parameter for max number of items
        schema:
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of repositories
          headers:
            Link:
              description: next paginated result
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repositories'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-pageable:
        itemName: repositories
        nextLinkName: link
      x-ms-examples:
        Get repositories in a registry:
          $ref: ./examples/GetRepositoryList.json
  /acr/v1/{name}:
    get:
      tags:
      - Registry
      description: Get repository attributes
      operationId: ContainerRegistry_GetProperties
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAttributes'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Get details of repository:
          $ref: ./examples/GetRepositoryAttributes.json
    delete:
      tags:
      - Registry
      description: Delete the repository identified by `name`
      operationId: ContainerRegistry_DeleteRepository
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      responses:
        "202":
          description: The repository is deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedRepository'
        "404":
          description: The repository was not found
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Delete a repository:
          $ref: ./examples/DeleteAcrRepository.json
    patch:
      tags:
      - Registry
      description: Update the attribute identified by `name` where `reference` is
        the name of the repository.
      operationId: ContainerRegistry_UpdateProperties
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      requestBody:
        description: Repository attribute value
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryChangeableAttributes'
        required: false
        x-ms-parameter-location: method
      responses:
        "200":
          description: The attributes are updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAttributes'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Update repository attributes:
          $ref: ./examples/UpdateRepositoryAttributes.json
      x-codegen-request-body-name: value
  /acr/v1/{name}/_tags:
    get:
      tags:
      - Repository
      description: List tags of a repository
      operationId: ContainerRegistry_GetTags
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: last
        in: query
        description: Query parameter for the last item in previous query. Result set
          will include values lexically after last.
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: "n"
        in: query
        description: query parameter for max number of items
        schema:
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: orderby
        in: query
        description: orderby query parameter
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: digest
        in: query
        description: filter by digest
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      responses:
        "200":
          description: Tag details of a repository
          headers:
            Link:
              description: next paginated result
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagList'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Get tags of a repository:
          $ref: ./examples/GetTagList.json
      x-ms-pageable:
        itemName: tags
        nextLinkName: link
  /acr/v1/{name}/_tags/{reference}:
    get:
      tags:
      - Repository
      description: Get tag attributes by tag
      operationId: ContainerRegistry_GetTagProperties
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: reference
        in: path
        description: Tag name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      responses:
        "200":
          description: Tag attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAttributes'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Get tag attributes:
          $ref: ./examples/GetTagAttributes.json
    delete:
      tags:
      - Repository
      description: Delete tag
      operationId: ContainerRegistry_DeleteTag
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: reference
        in: path
        description: Tag name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      responses:
        "202":
          description: The tag is deleted
          content: {}
        "404":
          description: The tag was not found
          content: {}
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Delete a tag:
          $ref: ./examples/DeleteTag.json
    patch:
      tags:
      - Repository
      description: Update tag attributes
      operationId: ContainerRegistry_UpdateTagAttributes
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: reference
        in: path
        description: Tag name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      requestBody:
        description: Tag attribute value
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagChangeableAttributes'
        required: false
        x-ms-parameter-location: method
      responses:
        "200":
          description: The attributes are updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAttributes'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Update attributes of a tag:
          $ref: ./examples/UpdateTagAttributes.json
      x-codegen-request-body-name: value
  /acr/v1/{name}/_manifests:
    get:
      tags:
      - Repository
      description: List manifests of a repository
      operationId: ContainerRegistry_GetManifests
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: last
        in: query
        description: Query parameter for the last item in previous query. Result set
          will include values lexically after last.
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: "n"
        in: query
        description: query parameter for max number of items
        schema:
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: orderby
        in: query
        description: orderby query parameter
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of manifests
          headers:
            Link:
              description: next paginated result
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrManifests'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Get list of available manifests:
          $ref: ./examples/GetManifestList.json
      x-ms-pageable:
        itemName: manifests
        nextLinkName: link
  /acr/v1/{name}/_manifests/{digest}:
    get:
      tags:
      - Repository
      description: Get manifest attributes
      operationId: ContainerRegistry_GetManifestProperties
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: digest
        in: path
        description: Digest of a BLOB
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      responses:
        "200":
          description: List of attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestAttributes'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Get manifest attributes:
          $ref: ./examples/GetManifestAttributes.json
    patch:
      tags:
      - Repository
      description: Update properties of a manifest
      operationId: ContainerRegistry_UpdateManifestProperties
      parameters:
      - name: name
        in: path
        description: Name of the image (including the namespace)
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: digest
        in: path
        description: Digest of a BLOB
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      requestBody:
        description: Manifest attribute value
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManifestChangeableAttributes'
        required: false
        x-ms-parameter-location: method
      responses:
        "200":
          description: The attributes are updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestAttributes'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      x-ms-examples:
        Update attributes of a manifest:
          $ref: ./examples/UpdateManifestAttributes.json
      x-codegen-request-body-name: value
  /oauth2/exchange:
    post:
      tags:
      - AcrToken
      - RefreshToken
      description: Exchange AAD tokens for an ACR refresh Token
      operationId: Authentication_ExchangeAadAccessTokenForAcrRefreshToken
      parameters:
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - grant_type
              - service
              type: object
              properties:
                grant_type:
                  type: string
                  description: "Can take a value of access_token_refresh_token, or\
                    \ access_token, or refresh_token"
                  enum:
                  - access_token_refresh_token
                  - access_token
                  - refresh_token
                  x-ms-parameter-location: method
                  x-accessibility: internal
                service:
                  type: string
                  description: Indicates the name of your Azure container registry.
                  x-ms-parameter-location: method
                tenant:
                  type: string
                  description: AAD tenant associated to the AAD credentials.
                  x-ms-parameter-location: method
                refresh_token:
                  type: string
                  description: "AAD refresh token, mandatory when grant_type is access_token_refresh_token\
                    \ or refresh_token"
                  x-ms-parameter-location: method
                access_token:
                  type: string
                  description: "AAD access token, mandatory when grant_type is access_token_refresh_token\
                    \ or access_token."
                  x-ms-client-name: aadAccessToken
                  x-ms-parameter-location: method
        required: true
      responses:
        "200":
          description: ACR refresh token acquired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshToken'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      security: []
      x-ms-examples:
        Exchange AAD Token for ACR Refresh:
          $ref: ./examples/PostRefreshToken.json
  /oauth2/token:
    get:
      tags:
      - AcrToken
      - AccessToken
      - userLogin
      description: "Exchange Username, Password and Scope for an ACR Access Token"
      operationId: Authentication_GetAcrAccessTokenFromLogin
      parameters:
      - name: service
        in: query
        description: Indicates the name of your Azure container registry.
        required: true
        schema:
          type: string
      - name: scope
        in: query
        description: "Expected to be a valid scope, and can be specified more than\
          \ once for multiple scope requests. You can obtain this from the Www-Authenticate\
          \ response header from the challenge."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Access token acquired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      security:
      - registry_auth: []
      x-ms-examples:
        Get Access Token with username and password:
          $ref: ./examples/GetAccessToken.json
    post:
      tags:
      - AcrToken
      - AccessToken
      description: Exchange ACR Refresh token for an ACR Access Token
      operationId: Authentication_ExchangeAcrRefreshTokenForAcrAccessToken
      parameters:
      - name: api-version
        in: query
        description: Client Api Version.
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - grant_type
              - refresh_token
              - scope
              - service
              type: object
              properties:
                service:
                  type: string
                  description: Indicates the name of your Azure container registry.
                  x-ms-parameter-location: method
                scope:
                  type: string
                  description: "Which is expected to be a valid scope, and can be\
                    \ specified more than once for multiple scope requests. You obtained\
                    \ this from the Www-Authenticate response header from the challenge."
                refresh_token:
                  type: string
                  description: Must be a valid ACR refresh token
                  x-ms-client-name: acrRefreshToken
                grant_type:
                  type: string
                  description: Grant type is expected to be refresh_token
                  enum:
                  - refresh_token
                  - password
                  x-ms-enum:
                    name: TokenGrantType
                  x-accessibility: internal
                  x-ms-client-default: refresh_token
        required: true
      responses:
        "200":
          description: ACR access token acquired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        default:
          description: ACR error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
      security: []
      x-ms-examples:
        Get Access Token with Refresh Token:
          $ref: ./examples/PostAccessToken.json
components:
  schemas:
    formData_Grant_type:
      type: string
      description: "Can take a value of access_token_refresh_token, or access_token,\
        \ or refresh_token"
      enum:
      - access_token_refresh_token
      - access_token
      - refresh_token
      x-ms-parameter-location: method
      x-accessibility: internal
    formData_Service:
      type: string
      description: Indicates the name of your Azure container registry.
      x-ms-parameter-location: method
    formData_Tenant:
      type: string
      description: AAD tenant associated to the AAD credentials.
      x-ms-parameter-location: method
    formData_Scope:
      type: string
      description: "Which is expected to be a valid scope, and can be specified more\
        \ than once for multiple scope requests. You can obtain this from the Www-Authenticate\
        \ response header from the challenge."
      x-ms-parameter-location: method
    formData_RefreshToken:
      type: string
      description: "AAD refresh token, mandatory when grant_type is access_token_refresh_token\
        \ or refresh_token"
      x-ms-parameter-location: method
    formData_AccessToken:
      type: string
      description: "AAD access token, mandatory when grant_type is access_token_refresh_token\
        \ or access_token."
      x-ms-client-name: aadAccessToken
      x-ms-parameter-location: method
    RepositoryAttributes:
      required:
      - changeableAttributes
      - createdTime
      - imageName
      - lastUpdateTime
      - manifestCount
      - registry
      - tagCount
      type: object
      properties:
        registry:
          type: string
          description: "Registry login server name. This is likely to be similar to\
            \ {registry-name}.azurecr.io."
          readOnly: true
          x-ms-client-name: registryLoginServer
        imageName:
          type: string
          description: Image name
          readOnly: true
          x-ms-client-name: name
        createdTime:
          type: string
          description: Image created time
          format: date-time
          readOnly: true
          x-ms-client-name: createdOn
        lastUpdateTime:
          type: string
          description: Image last update time
          format: date-time
          readOnly: true
          x-ms-client-name: lastUpdatedOn
        manifestCount:
          type: integer
          description: Number of the manifests
          readOnly: true
        tagCount:
          type: integer
          description: Number of the tags
          readOnly: true
        changeableAttributes:
          $ref: '#/components/schemas/RepositoryChangeableAttributes'
      description: Properties of this repository.
      example:
        registry: registryname.azurecr.io
        changeableAttributes:
          readEnabled: true
          listEnabled: true
          deleteEnabled: true
          writeEnabled: true
        imageName: imageName
        createdTime: 2018-09-07T16:30:46.6583219Z
        tagCount: 6
        manifestCount: 2
        lastUpdateTime: 2018-09-07T16:30:46.6583219Z
      x-ms-client-name: ContainerRepositoryProperties
    TagList:
      required:
      - imageName
      - registry
      - tags
      type: object
      properties:
        registry:
          type: string
          description: "Registry login server name. This is likely to be similar to\
            \ {registry-name}.azurecr.io."
          x-ms-client-name: RegistryLoginServer
        imageName:
          type: string
          description: Image name
          x-ms-client-name: repository
        tags:
          type: array
          description: List of tag attribute details
          items:
            $ref: '#/components/schemas/TagAttributesBase'
          x-ms-client-name: TagAttributeBases
          x-accessibility: internal
        link:
          type: string
      description: List of tag details
      example:
        registry: registry
        imageName: imageName
        tags:
        - changeableAttributes:
            readEnabled: true
            listEnabled: true
            deleteEnabled: true
            writeEnabled: true
          name: name
          digest: digest
          createdTime: createdTime
          signed: true
          lastUpdateTime: lastUpdateTime
        - changeableAttributes:
            readEnabled: true
            listEnabled: true
            deleteEnabled: true
            writeEnabled: true
          name: name
          digest: digest
          createdTime: createdTime
          signed: true
          lastUpdateTime: lastUpdateTime
      x-accessibility: internal
    TagAttributes:
      required:
      - imageName
      - registry
      - tag
      type: object
      properties:
        registry:
          type: string
          description: "Registry login server name. This is likely to be similar to\
            \ {registry-name}.azurecr.io."
          readOnly: true
          x-ms-client-name: registryLoginServer
        imageName:
          type: string
          description: Image name
          readOnly: true
          x-ms-client-name: repositoryName
        tag:
          $ref: '#/components/schemas/TagAttributesBase'
      description: Tag attributes
      example:
        registry: registry
        imageName: imageName
        tag:
          changeableAttributes:
            readEnabled: true
            listEnabled: true
            deleteEnabled: true
            writeEnabled: true
          name: name
          digest: digest
          createdTime: createdTime
          signed: true
          lastUpdateTime: lastUpdateTime
      x-ms-client-name: ArtifactTagProperties
    TagAttributesBase:
      required:
      - changeableAttributes
      - createdTime
      - digest
      - lastUpdateTime
      - name
      type: object
      properties:
        name:
          type: string
          description: Tag name
          readOnly: true
        digest:
          type: string
          description: Tag digest
          readOnly: true
        createdTime:
          type: string
          description: Tag created time
          format: date-time
          readOnly: true
          x-ms-client-name: createdOn
        lastUpdateTime:
          type: string
          description: Tag last update time
          format: date-time
          readOnly: true
          x-ms-client-name: lastUpdatedOn
        signed:
          type: boolean
          description: Is signed
        changeableAttributes:
          $ref: '#/components/schemas/TagChangeableAttributes'
      description: Tag attribute details
      example:
        changeableAttributes:
          readEnabled: true
          listEnabled: true
          deleteEnabled: true
          writeEnabled: true
        name: tagname
        digest: sha256:0873c923e00e0fd2ba78041bfb64a105e1ecb7678916d1f7776311e45bf5634b
        createdTime: 2018-08-10T17:28:44.1082945Z
        signed: true
        lastUpdateTime: 2018-08-10T17:28:44.1082945Z
      x-accessibility: internal
    TagOrderBy:
      type: string
      description: Sort options for ordering tags in a collection.
      enum:
      - none
      - timedesc
      - timeasc
      x-ms-enum:
        name: ArtifactTagOrderBy
        values:
        - value: none
          name: None
          description: Do not provide an orderby value in the request.
        - value: timedesc
          name: LastUpdatedOnDescending
          description: "Order tags by LastUpdatedOn field, from most recently updated\
            \ to least recently updated."
        - value: timeasc
          name: LastUpdatedOnAscending
          description: "Order tags by LastUpdatedOn field, from least recently updated\
            \ to most recently updated."
      x-accessibility: public
    ArtifactArchitecture:
      type: string
      description: The artifact platform's architecture.
      enum:
      - "386"
      - amd64
      - arm
      - arm64
      - mips
      - mipsle
      - mips64
      - mips64le
      - ppc64
      - ppc641e
      - riscv64
      - s390x
      - wasm
      x-ms-enum:
        name: ArtifactArchitecture
        modelAsString: true
        values:
        - value: "386"
          name: I386
          description: i386
        - value: amd64
          name: Amd64
          description: AMD64
        - value: arm
          name: Arm
          description: ARM
        - value: arm64
          name: Arm64
          description: ARM64
        - value: mips
          name: Mips
          description: MIPS
        - value: mipsle
          name: MipsLe
          description: MIPSLE
        - value: mips64
          name: Mips64
          description: MIPS64
        - value: mips64le
          name: Mips64Le
          description: MIPS64LE
        - value: ppc64
          name: Ppc64
          description: PPC64
        - value: ppc64le
          name: Ppc64Le
          description: PPC64LE
        - value: riscv64
          name: RiscV64
          description: RISCv64
        - value: s390x
          name: S390x
          description: s390x
        - value: wasm
          name: Wasm
          description: Wasm
      x-accessibility: public
    ArtifactOperatingSystem:
      type: string
      enum:
      - aix
      - android
      - darwin
      - dragonfly
      - freebsd
      - illumos
      - ios
      - js
      - linux
      - netbsd
      - openbsd
      - plan9
      - solaris
      - windows
      x-ms-enum:
        name: ArtifactOperatingSystem
        modelAsString: true
        values:
        - value: aix
          name: Aix
          description: ""
        - value: android
          name: Android
          description: ""
        - value: darwin
          name: Darwin
          description: ""
        - value: dragonfly
          name: Dragonfly
          description: ""
        - value: freebsd
          name: FreeBsd
          description: ""
        - value: illumos
          name: Illumos
          description: ""
        - value: ios
          name: iOS
          description: ""
        - value: js
          name: JS
          description: ""
        - value: linux
          name: Linux
          description: ""
        - value: netbsd
          name: NetBsd
          description: ""
        - value: openbsd
          name: OpenBsd
          description: ""
        - value: plan9
          name: Plan9
          description: ""
        - value: solaris
          name: Solaris
          description: ""
        - value: windows
          name: Windows
          description: ""
      x-accessibility: public
    AcrManifests:
      type: object
      properties:
        registry:
          type: string
          description: "Registry login server name. This is likely to be similar to\
            \ {registry-name}.azurecr.io."
          x-ms-client-name: registryLoginServer
        imageName:
          type: string
          description: Image name
          x-ms-client-name: repository
        manifests:
          type: array
          description: List of manifests
          items:
            $ref: '#/components/schemas/ManifestAttributesBase'
        link:
          type: string
      description: Manifest attributes
      example:
        registry: registry
        imageName: imageName
        manifests:
        - changeableAttributes:
            readEnabled: true
            listEnabled: true
            deleteEnabled: true
            writeEnabled: true
          os: os
          digest: digest
          imageSize: 2401606
          createdTime: createdTime
          mediaType: mediaType
          configMediaType: configMediaType
          lastUpdateTime: lastUpdateTime
          architecture: architecture
          tags:
          - tags
          - tags
        - changeableAttributes:
            readEnabled: true
            listEnabled: true
            deleteEnabled: true
            writeEnabled: true
          os: os
          digest: digest
          imageSize: 2401606
          createdTime: createdTime
          mediaType: mediaType
          configMediaType: configMediaType
          lastUpdateTime: lastUpdateTime
          architecture: architecture
          tags:
          - tags
          - tags
      x-accessibility: internal
    ManifestAttributes:
      required:
      - manifest
      type: object
      properties:
        registry:
          type: string
          description: "Registry login server name. This is likely to be similar to\
            \ {registry-name}.azurecr.io."
          readOnly: true
          x-ms-client-name: registryLoginServer
        imageName:
          type: string
          description: Repository name
          readOnly: true
          x-ms-client-name: repositoryName
        manifest:
          $ref: '#/components/schemas/ManifestAttributesBase'
      description: Manifest attributes details
      example:
        registry: acrapi.azurecr-test.io
        imageName: nanoserver
        manifest:
          digest: sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086
          imageSize: 2401606
          createdTime: 2018-09-06T06:17:20.9983915Z
          lastUpdateTime: 2018-09-06T06:17:20.9983915Z
          architecture: amd64
          os: windows
          mediaType: application/vnd.docker.distribution.manifest.v2+json
          configMediaType: application/vnd.docker.container.image.v1+json
          tags:
          - 4.7.2-20180905-nanoserver-1803
          changeableAttributes:
            deleteEnabled: true
            writeEnabled: true
            readEnabled: true
            listEnabled: true
      x-ms-client-name: ArtifactManifestProperties
    ManifestAttributesBase:
      required:
      - createdTime
      - digest
      - lastUpdateTime
      type: object
      properties:
        digest:
          type: string
          description: Manifest
          readOnly: true
        imageSize:
          type: integer
          description: Image size
          format: int64
          readOnly: true
          x-ms-client-name: size
        createdTime:
          type: string
          description: Created time
          format: date-time
          readOnly: true
          x-ms-client-name: createdOn
        lastUpdateTime:
          type: string
          description: Last update time
          format: date-time
          readOnly: true
          x-ms-client-name: lastUpdatedOn
        architecture:
          $ref: '#/components/schemas/ArtifactArchitecture'
        os:
          $ref: '#/components/schemas/ArtifactOperatingSystem'
        references:
          type: array
          description: "List of artifacts that are referenced by this manifest list,\
            \ with information about the platform each supports.  This list will be\
            \ empty if this is a leaf manifest and not a manifest list."
          readOnly: true
          items:
            $ref: '#/components/schemas/ManifestAttributes_manifest_references'
          x-ms-client-name: relatedArtifacts
        configMediaType:
          type: string
          description: Config blob media type
        tags:
          type: array
          description: List of tags
          readOnly: true
          items:
            type: string
            description: Tag name
        changeableAttributes:
          $ref: '#/components/schemas/ManifestChangeableAttributes'
      description: Manifest details
      example:
        changeableAttributes:
          readEnabled: true
          listEnabled: true
          deleteEnabled: true
          writeEnabled: true
        os: os
        digest: digest
        imageSize: 2401606
        createdTime: createdTime
        mediaType: mediaType
        configMediaType: configMediaType
        lastUpdateTime: lastUpdateTime
        architecture: architecture
        tags:
        - tags
        - tags
      x-accessibility: internal
    RefreshToken:
      type: object
      properties:
        refresh_token:
          type: string
          description: The refresh token to be used for generating access tokens
      x-accessibility: internal
      x-ms-client-name: AcrRefreshToken
    ManifestOrderBy:
      type: string
      description: Sort options for ordering manifests in a collection.
      default: none
      enum:
      - none
      - timedesc
      - timeasc
      x-ms-enum:
        name: ArtifactManifestOrderBy
        values:
        - value: none
          name: None
          description: Do not provide an orderby value in the request.
        - value: timedesc
          name: LastUpdatedOnDescending
          description: "Order manifests by LastUpdatedOn field, from most recently\
            \ updated to least recently updated."
        - value: timeasc
          name: LastUpdatedOnAscending
          description: "Order manifest by LastUpdatedOn field, from least recently\
            \ updated to most recently updated."
      x-accessibility: public
    AccessToken:
      type: object
      properties:
        access_token:
          type: string
          description: The access token for performing authenticated requests
      x-accessibility: internal
      x-ms-client-name: AcrAccessToken
    AcrErrors:
      type: object
      properties:
        errors:
          type: array
          description: Array of detailed error
          items:
            $ref: '#/components/schemas/AcrErrorInfo'
      description: Acr error response describing why the operation failed
    RepositoryTags:
      type: object
      properties:
        name:
          type: string
          description: Name of the image
        tags:
          type: array
          description: List of tags
          items:
            type: string
            description: Tag name
      description: Result of the request to list tags of the image
      example:
        name: name
        tags:
        - tags
        - tags
      x-accessibility: internal
    ImageSignature:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/JWK'
        signature:
          type: string
          description: "A signature for the image manifest, signed by a libtrust private\
            \ key"
        protected:
          type: string
          description: The signed protected header
      description: Signature of a signed manifest
      example:
        header:
          jwk:
            crv: P-256
            kid: WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q
            kty: EC
            x: OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY
            "y": EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc
          alg: ES256
        signature: p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg
        protected: eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ
      x-accessibility: internal
    JWK:
      type: object
      properties:
        jwk:
          $ref: '#/components/schemas/JWKHeader'
        alg:
          type: string
          description: The algorithm used to sign or encrypt the JWT
      description: A JSON web signature
      x-accessibility: internal
    JWKHeader:
      type: object
      properties:
        crv:
          type: string
          description: crv value
        kid:
          type: string
          description: kid value
        kty:
          type: string
          description: kty value
        x:
          type: string
          description: x value
        "y":
          type: string
          description: y value
      description: JSON web key parameter
      x-accessibility: internal
    History:
      type: object
      properties:
        v1Compatibility:
          type: string
          description: The raw v1 compatibility information
      description: A list of unstructured historical data for v1 compatibility
      example:
        v1Compatibility: v1 compatibility info
      x-accessibility: internal
    Repositories:
      type: object
      properties:
        repositories:
          type: array
          description: Repository names
          items:
            type: string
        link:
          type: string
      description: List of repositories
      example:
        repositories:
        - production/alpine
        - testing/alpine
      x-accessibility: internal
    DeletedRepository:
      type: object
      properties:
        manifestsDeleted:
          type: array
          description: SHA of the deleted image
          readOnly: true
          items:
            type: string
          x-ms-client-name: deletedManifests
        tagsDeleted:
          type: array
          description: Tag of the deleted image
          readOnly: true
          items:
            type: string
          x-ms-client-name: deletedTags
      description: Deleted repository
      x-ms-client-name: DeleteRepositoryResult
    AcrErrorInfo:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        detail:
          type: object
          properties: {}
          description: Error details
      description: Error information
    FsLayer:
      type: object
      properties:
        blobSum:
          type: string
          description: SHA of an image layer
      description: Image layer information
      example:
        blobSum: sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30
      x-accessibility: internal
    Descriptor:
      type: object
      properties:
        mediaType:
          type: string
          description: Layer media type
        size:
          type: integer
          description: Layer size
          format: int64
        digest:
          type: string
          description: Layer digest
        urls:
          type: array
          description: Specifies a list of URIs from which this object may be downloaded.
          items:
            type: string
            description: "Must conform to RFC 3986. Entries should use the http and\
              \ https schemes, as defined in RFC 7230."
        annotations:
          $ref: '#/components/schemas/Annotations'
      description: Docker V2 image layer descriptor including config and layers
      example:
        mediaType: application/vnd.docker.image.rootfs.diff.tar.gzip
        size: 2107098
        digest: sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6
      x-accessibility: internal
    TagChangeableAttributes:
      type: object
      properties:
        deleteEnabled:
          type: boolean
          description: Delete enabled
          x-ms-client-name: canDelete
        writeEnabled:
          type: boolean
          description: Write enabled
          x-ms-client-name: canWrite
        listEnabled:
          type: boolean
          description: List enabled
          x-ms-client-name: canList
        readEnabled:
          type: boolean
          description: Read enabled
          x-ms-client-name: canRead
      description: Changeable attributes
      example:
        readEnabled: true
        listEnabled: true
        deleteEnabled: true
        writeEnabled: true
      x-ms-client-name: TagWriteableProperties
      x-accessibility: internal
    TagAttributes_tag:
      type: object
      properties:
        signatureRecord:
          type: string
          description: SignatureRecord value
      description: Tag
      example:
        signatureRecord: signatureRecord
    ManifestAttributes_manifest_references:
      required:
      - digest
      type: object
      properties:
        digest:
          type: string
          description: Manifest digest
          readOnly: true
        architecture:
          $ref: '#/components/schemas/ArtifactArchitecture'
        os:
          $ref: '#/components/schemas/ArtifactOperatingSystem'
      description: "The artifact's platform, consisting of operating system and architecture."
      example:
        os: os
        digest: digest
        architecture: architecture
      x-ms-client-name: ArtifactManifestPlatform
    ManifestAttributes_manifest:
      type: object
      properties:
        references:
          type: array
          description: List of manifest attributes details
          items:
            $ref: '#/components/schemas/ManifestAttributes_manifest_references'
      description: List of manifest attributes
      example:
        references:
        - os: os
          digest: digest
          architecture: architecture
        - os: os
          digest: digest
          architecture: architecture
    ManifestChangeableAttributes:
      type: object
      properties:
        deleteEnabled:
          type: boolean
          description: Delete enabled
          x-ms-client-name: canDelete
        writeEnabled:
          type: boolean
          description: Write enabled
          x-ms-client-name: canWrite
        listEnabled:
          type: boolean
          description: List enabled
          x-ms-client-name: canList
        readEnabled:
          type: boolean
          description: Read enabled
          x-ms-client-name: canRead
      description: Changeable attributes
      example:
        readEnabled: true
        listEnabled: true
        deleteEnabled: true
        writeEnabled: true
      x-ms-client-name: ManifestWriteableProperties
      x-accessibility: internal
    RepositoryChangeableAttributes:
      type: object
      properties:
        deleteEnabled:
          type: boolean
          description: Delete enabled
          x-ms-client-name: canDelete
        writeEnabled:
          type: boolean
          description: Write enabled
          x-ms-client-name: canWrite
        listEnabled:
          type: boolean
          description: List enabled
          x-ms-client-name: canList
        readEnabled:
          type: boolean
          description: Read enabled
          x-ms-client-name: canRead
      description: Changeable attributes for Repository
      example:
        readEnabled: true
        listEnabled: true
        deleteEnabled: true
        writeEnabled: true
      x-ms-client-name: RepositoryWriteableProperties
      x-accessibility: internal
    Manifest:
      type: object
      properties:
        schemaVersion:
          type: integer
          description: Schema version
      description: Returns the requested manifest file
      x-accessibility: internal
    ManifestWrapper:
      properties:
        mediaType:
          type: string
          description: Media type for this Manifest
        manifests:
          type: array
          description: "(ManifestList, OCIIndex) List of V2 image layer information"
          items:
            $ref: '#/components/schemas/ManifestListAttributes'
        config:
          $ref: '#/components/schemas/Descriptor'
        layers:
          type: array
          description: "(V2, OCI) List of V2 image layer information"
          items:
            $ref: '#/components/schemas/Descriptor'
        annotations:
          $ref: '#/components/schemas/Annotations'
        architecture:
          type: string
          description: (V1) CPU architecture
        name:
          type: string
          description: (V1) Image name
        tag:
          type: string
          description: (V1) Image tag
        fsLayers:
          type: array
          description: (V1) List of layer information
          items:
            $ref: '#/components/schemas/FsLayer'
        history:
          type: array
          description: (V1) Image history
          items:
            $ref: '#/components/schemas/History'
        signatures:
          type: array
          description: (V1) Image signature
          items:
            $ref: '#/components/schemas/ImageSignature'
      description: Returns the requested manifest file
      allOf:
      - $ref: '#/components/schemas/Manifest'
      x-accessibility: internal
    ManifestList:
      properties:
        mediaType:
          type: string
          description: Media type for this Manifest
        manifests:
          type: array
          description: List of V2 image layer information
          items:
            $ref: '#/components/schemas/ManifestListAttributes'
      description: Returns the requested Docker multi-arch-manifest file
      allOf:
      - $ref: '#/components/schemas/Manifest'
      x-ms-discriminator-value: application/vnd.docker.distribution.manifest.list.v2+json
      x-accessibility: internal
    ManifestListAttributes:
      type: object
      properties:
        mediaType:
          type: string
          description: "The MIME type of the referenced object. This will generally\
            \ be application/vnd.docker.image.manifest.v2+json, but it could also\
            \ be application/vnd.docker.image.manifest.v1+json"
        size:
          type: integer
          description: The size in bytes of the object
          format: int64
        digest:
          type: string
          description: "The digest of the content, as defined by the Registry V2 HTTP\
            \ API Specification"
        platform:
          $ref: '#/components/schemas/Platform'
      x-accessibility: internal
    Platform:
      type: object
      properties:
        architecture:
          type: string
          description: "Specifies the CPU architecture, for example amd64 or ppc64le."
        os:
          type: string
          description: "The os field specifies the operating system, for example linux\
            \ or windows."
        os.version:
          type: string
          description: "The optional os.version field specifies the operating system\
            \ version, for example 10.0.10586."
        os.features:
          type: array
          description: "The optional os.features field specifies an array of strings,\
            \ each listing a required OS feature (for example on Windows win32k"
          items:
            type: string
        variant:
          type: string
          description: "The optional variant field specifies a variant of the CPU,\
            \ for example armv6l to specify a particular CPU variant of the ARM CPU."
        features:
          type: array
          description: "The optional features field specifies an array of strings,\
            \ each listing a required CPU feature (for example sse4 or aes"
          items:
            type: string
      description: The platform object describes the platform which the image in the
        manifest runs on. A full list of valid operating system and architecture values
        are listed in the Go language documentation for $GOOS and $GOARCH
      x-accessibility: internal
    V2Manifest:
      properties:
        mediaType:
          type: string
          description: Media type for this Manifest
        config:
          $ref: '#/components/schemas/Descriptor'
        layers:
          type: array
          description: List of V2 image layer information
          items:
            $ref: '#/components/schemas/Descriptor'
      description: Returns the requested Docker V2 Manifest file
      allOf:
      - $ref: '#/components/schemas/Manifest'
      x-ms-discriminator-value: application/vnd.docker.distribution.manifest.v2+json
      x-accessibility: internal
    OCIManifest:
      properties:
        config:
          $ref: '#/components/schemas/Descriptor'
        layers:
          type: array
          description: List of V2 image layer information
          items:
            $ref: '#/components/schemas/Descriptor'
        annotations:
          $ref: '#/components/schemas/Annotations'
      description: Returns the requested OCI Manifest file
      allOf:
      - $ref: '#/components/schemas/Manifest'
      x-ms-discriminator-value: application/vnd.oci.image.manifest.v1+json
      x-accessibility: internal
    OCIIndex:
      properties:
        manifests:
          type: array
          description: List of OCI image layer information
          items:
            $ref: '#/components/schemas/ManifestListAttributes'
        annotations:
          $ref: '#/components/schemas/Annotations'
      description: Returns the requested OCI index file
      allOf:
      - $ref: '#/components/schemas/Manifest'
      x-ms-discriminator-value: application/vnd.oci.image.index.v1+json
      x-accessibility: internal
    V1Manifest:
      properties:
        architecture:
          type: string
          description: CPU architecture
        name:
          type: string
          description: Image name
        tag:
          type: string
          description: Image tag
        fsLayers:
          type: array
          description: List of layer information
          items:
            $ref: '#/components/schemas/FsLayer'
        history:
          type: array
          description: Image history
          items:
            $ref: '#/components/schemas/History'
        signatures:
          type: array
          description: Image signature
          items:
            $ref: '#/components/schemas/ImageSignature'
      description: Returns the requested V1 manifest file
      allOf:
      - $ref: '#/components/schemas/Manifest'
      x-ms-discriminator-value: application/vnd.oci.image.manifest.v1+json
      x-accessibility: internal
    Annotations:
      type: object
      properties:
        org.opencontainers.image.created:
          type: string
          description: "Date and time on which the image was built (string, date-time\
            \ as defined by https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: date-time
          x-ms-client-name: Created
        org.opencontainers.image.authors:
          type: string
          description: Contact details of the people or organization responsible for
            the image.
          x-ms-client-name: Authors
        org.opencontainers.image.url:
          type: string
          description: URL to find more information on the image.
          x-ms-client-name: Url
        org.opencontainers.image.documentation:
          type: string
          description: URL to get documentation on the image.
          x-ms-client-name: Documentation
        org.opencontainers.image.source:
          type: string
          description: URL to get source code for building the image.
          x-ms-client-name: Source
        org.opencontainers.image.version:
          type: string
          description: "Version of the packaged software. The version MAY match a\
            \ label or tag in the source code repository, may also be Semantic versioning-compatible"
          x-ms-client-name: Version
        org.opencontainers.image.revision:
          type: string
          description: Source control revision identifier for the packaged software.
          x-ms-client-name: Revision
        org.opencontainers.image.vendor:
          type: string
          description: "Name of the distributing entity, organization or individual."
          x-ms-client-name: Vendor
        org.opencontainers.image.licenses:
          type: string
          description: License(s) under which contained software is distributed as
            an SPDX License Expression.
          x-ms-client-name: Licenses
        org.opencontainers.image.ref.name:
          type: string
          description: Name of the reference for a target.
          x-ms-client-name: Name
        org.opencontainers.image.title:
          type: string
          description: Human-readable title of the image
          x-ms-client-name: Title
        org.opencontainers.image.description:
          type: string
          description: Human-readable description of the software packaged in the
            image
          x-ms-client-name: Description
      additionalProperties:
        type: object
        properties: {}
      description: Additional information provided through arbitrary metadata.
      nullable: true
      x-accessibility: internal
      x-nullable: true
  parameters:
    Url:
      name: url
      in: path
      description: Registry login URL
      required: true
      schema:
        type: string
        x-ms-client-name: loginUri
        x-ms-skip-url-encoding: true
        x-ms-parameter-location: client
      x-ms-client-name: loginUri
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: client
    ImageReference:
      name: reference
      in: path
      description: "A tag or a digest, pointing to a specific image"
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ManifestReference:
      name: reference
      in: path
      description: Tag or digest of the target manifest
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    TagReference:
      name: reference
      in: path
      description: Tag name
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    Digest:
      name: digest
      in: path
      description: Digest of a BLOB
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    DigestReference:
      name: reference
      in: path
      description: Digest of a BLOB
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    BlobQueryDigest:
      name: digest
      in: query
      description: Digest of a BLOB
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    QueryOrderBy:
      name: orderby
      in: query
      description: orderby query parameter
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    QueryNum:
      name: "n"
      in: query
      description: query parameter for max number of items
      schema:
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    QueryLast:
      name: last
      in: query
      description: Query parameter for the last item in previous query. Result set
        will include values lexically after last.
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    QueryDigest:
      name: digest
      in: query
      description: filter by digest
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ImageName:
      name: name
      in: path
      description: Name of the image (including the namespace)
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    From:
      name: from
      in: query
      description: Name of the source repository.
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    Mount:
      name: mount
      in: query
      description: Digest of blob to mount from the source repository.
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    Uuid:
      name: uuid
      in: path
      description: A uuid identifying the upload.
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    Content-Range:
      name: Content-Range
      in: header
      description: Range of bytes identifying the desired block of content represented
        by the body. Start must the end offset retrieved via status check plus one.
        Note that this is a non-standard use of the `Content-Range` header.
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    Range:
      name: Range
      in: header
      description: "Format : bytes=<start>-<end>,  HTTP Range header specifying blob\
        \ chunk."
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    NoUploadCache:
      name: _nouploadcache
      in: query
      description: Acquired from NextLink
      schema:
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    State:
      name: _state
      in: query
      description: Acquired from NextLink
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    NextLink:
      name: nextBlobUuidLink
      in: path
      description: "Link acquired from upload start or previous chunk. Note, do not\
        \ include initial / (must do substring(1) )"
      required: true
      schema:
        type: string
        x-ms-client-name: location
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-client-name: location
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      schema:
        type: string
  requestBodies:
    RepositoryAttributeValue:
      description: Repository attribute value
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/RepositoryChangeableAttributes'
      required: false
      x-ms-parameter-location: method
    TagAttributeValue:
      description: Tag attribute value
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/TagChangeableAttributes'
      required: false
      x-ms-parameter-location: method
    ManifestAttributeValue:
      description: Manifest attribute value
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ManifestChangeableAttributes'
      required: false
      x-ms-parameter-location: method
    ManifestBody:
      description: "Manifest body, can take v1 or v2 values depending on accept header"
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Manifest'
      required: true
      x-ms-parameter-location: method
    RawData:
      description: Raw data of blob
      content:
        '*/*':
          schema:
            type: object
            format: file
      required: true
      x-ms-parameter-location: method
    RawDataOptional:
      description: Optional raw data of blob
      content:
        '*/*':
          schema:
            type: object
            format: file
      required: false
      x-ms-parameter-location: method
  securitySchemes:
    registry_auth:
      type: http
      scheme: basic
    registry_oauth2:
      type: apiKey
      name: Authorization
      in: header
x-ms-parameterized-host:
  hostTemplate: "{url}"
  useSchemePrefix: false
  positionInOperation: first
  parameters:
  - $ref: '#/parameters/Url'
x-ms-paths:
  /v2/{name}/blobs/uploads/?mode=resumable:
    post:
      tags:
      - ContainerRegistryBlob
      description: Initiate a resumable blob upload with an empty request body.
      operationId: ContainerRegistryBlob_StartUpload
      x-ms-examples:
        Start a blob upload:
          $ref: ./examples/StartBlobUpload.json
      parameters:
      - $ref: '#/parameters/ImageName'
      responses:
        "202":
          description: The upload has been created. The Location header must be used
            to complete the upload. The response should be identical to a GET request
            on the contents of the returned Location header.
          headers:
            Location:
              description: Provided location for blob
              type: string
            Range:
              description: Range indicating the current progress of the upload.
              type: string
            Docker-Upload-UUID:
              description: Identifies the docker upload uuid for the current request.
              type: string
        default:
          description: ACR error response describing why the operation failed.
          schema:
            $ref: '#/definitions/AcrErrors'
  /v2/{name}/blobs/{digest}?mode=chunk:
    get:
      produces:
      - application/octet-stream
      tags:
      - ContainerRegistryBlob
      description: "Retrieve the blob from the registry identified by `digest`. This\
        \ endpoint may also support RFC7233 compliant range requests. Support can\
        \ be detected by issuing a HEAD request. If the header `Accept-Range: bytes`\
        \ is returned, range requests can be used to fetch partial content."
      operationId: ContainerRegistryBlob_GetChunk
      parameters:
      - $ref: '#/parameters/ImageName'
      - $ref: '#/parameters/Digest'
      - $ref: '#/parameters/Range'
      x-ms-examples:
        Get a blob Chunk:
          $ref: ./examples/GetBlobChunk.json
      responses:
        "206":
          description: The blob identified by digest is available. The specified chunk
            of blob content will be present in the body of the request.
          schema:
            description: blob binary data
            type: file
            format: file
          headers:
            Content-Length:
              type: integer
              format: int64
              description: The length of the requested blob content.
            Content-Range:
              type: string
              description: Content range of blob chunk.
        default:
          description: ACR error response describing why the operation failed.
          schema:
            $ref: '#/definitions/AcrErrors'
    head:
      tags:
      - ContainerRegistryBlob
      parameters:
      - $ref: '#/parameters/ImageName'
      - $ref: '#/parameters/Digest'
      - $ref: '#/parameters/Range'
      description: "Same as GET, except only the headers are returned."
      operationId: ContainerRegistryBlob_CheckChunkExists
      x-ms-examples:
        Get headers without blob Chunk:
          $ref: ./examples/CheckBlobChunk.json
      responses:
        "200":
          description: The blob identified by digest is available. The specified chunk
            of blob content will be present in the body of the request.
          headers:
            Content-Length:
              type: integer
              format: int64
              description: The length of the requested blob content.
            Content-Range:
              type: string
              description: Content range of blob chunk.
        default:
          description: ACR error response describing why the operation failed.
          schema:
            $ref: '#/definitions/AcrErrors'
x-original-swagger-version: "2.0"
